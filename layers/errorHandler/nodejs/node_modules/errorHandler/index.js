const crypto = require('crypto');

/**
 * Handle errors by logging with a unique ID and notifying the user via WhatsApp.
 * @param {Error} err - The error object.
 * @param {Object} options
 * @param {string} options.waId - WhatsApp user ID to notify.
 * @param {string} options.phoneNumberId - WhatsApp phone number ID for sending messages.
 * @param {string} options.accessToken - WhatsApp API access token.
 * @returns {string} The generated error ID.
 */
async function handleError(err, { waId, phoneNumberId, accessToken } = {}) {
  const errorId = `${Date.now()}-${crypto.randomBytes(4).toString('hex')}`;
  console.error(`Error ID: ${errorId}`, err);
  if (waId && phoneNumberId && accessToken) {
    try {
      const message = `An internal error occurred (ID: ${errorId}). Please contact support with this ID.`;
      const whatsappUrl = `https://graph.facebook.com/v17.0/${phoneNumberId}/messages`;
      await fetch(whatsappUrl, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${accessToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          messaging_product: 'whatsapp',
          to: waId,
          text: { body: message }
        })
      });
    } catch (notifyErr) {
      console.error('Failed to send error notification to WhatsApp', notifyErr);
    }
  }
  return errorId;
}

module.exports = { handleError };